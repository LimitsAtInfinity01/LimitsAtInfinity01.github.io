---
title: Bookish Project
layout: layout.njk
---

<head>
    <link rel="stylesheet" href="/styles/bookish.css">
</head>

<main class="bookish-container">
    <div class="first-column">
    </div>

    <div class="bookish-card-container">
        <div>
            <h1>Bookish</h1>
           <div>
                <img class="logo" src="/assets/github-mark-white.png" alt="">
                <a href="https://github.com/LimitsAtInfinity01/django_book_search_app/tree/master" target="_blank">Project's Repository</a>
           </div>
        </div>
 

        <div class="general-card-layout">
            <header>
                <h2>What is bookish? üìö</h2>
            </header>
            <div class="answer">
                <h3>Description:</h3>
                <p>
                    Bookish is a website designed for book lovers. It helps users find information about books using the Free Library API. 
                    The site is easy to use and offers a fun way to explore and discover new books.
                </p>
                <div class="image-list-container">
                    <img class="project-image" src="/assets/bookish/bookishh_screenshot1.png" alt="">
                    <div class="list-section">
                        <h3>Features</h3>
                        <ul>
                            <li><span class="li-bold">Search:</span> Searches the catalog of the Open Library to retrieve information about books and their metadata.</li>
                            <li><span class="li-bold">Review books:</span> Write reviews and share them with other people. Comments to reviews are supported too.</li>
                            <li><span class="li-bold">Profile page:</span> Create a profile page that so users can share their reading lists, see their followers and following, and their reviews</li>
                            <li><span class="li-bold">Reading and favorite lists:</span> Create lists of favorite books as well as a reading list.</li>
                            <li><span class="li-bold">Posts:</span> Image, video, and text posts are also supported.</li>
                            <li><span class="li-bold">Follow other users:</span> Follow users and create communities.</li>
                        </ul>
                    </div>
                </div>
            </div>
            <hr class="custom-line">            
            <footer>
                <p>
                    Bookish is an intuitive and feature-rich application for book lovers to explore and discover books that match their interests. 
                    It allows users to search for books by title, author, genre, or keywords, providing detailed information and metadata retrieved from the Open Library API. 
                    The platform also lets users to create personalized reading lists, write and share reviews, and engage with a community of readers. 
                </p>
            </footer>
        </div>


        <div class="general-card-layout">
            <header>
                <h2>How was bookish made? ‚öôÔ∏è</h2>
            </header>
            <div class="answer">
                <h3>Languages and technologies</h3>
                <p>
                    Bookish was written in Python, and the Django framework was used to develop the backend. The Django ORM was utilized to interact with the database, enabling efficient and seamless data management. 
                    The frontend was built using HTML and CSS, ensuring a responsive and user-friendly interface. Additionally, the application integrates with the Open Library API to fetch book data and metadata.
                    Django's templating engine was used to dynamically generate HTML pages, allowing for seamless integration of backend data with the frontend. 
                    This made it easier to create reusable components and maintain a consistent design across the application.
                </p>
                <h3>Authentication & Media:</h3>
                <p>
                        Bookish leverages Django's built-in authentication system to provide secure user login, logout, and registration functionalities. 
                        This ensures that user data is protected and access to features is personalized. 
                        Additionally, the application supports file uploads for user avatars and media posts (images and videos) using Django's FileSystemStorage. 
                        This allows users to customize their profiles and share rich media content seamlessly.
                </p>
                <div class="image-list-container">
                    <img class="project-image" src="/assets/bookish/bookishh_screenshot2.png" alt="">                    
                    <div class="list-section">
                        <h3>Technologies</h3>
                        <ul class="ul-items ul-custom">
                            <li class="li-stylized">Python</li>
                            <li class="li-stylized">Django</li>
                            <li class="li-stylized">HTML</li>
                            <li class="li-stylized">CSS</li>
                            <li class="li-stylized">API</li>
                        </ul>
                    </div>
                </div>
            </div>
            <hr class="custom-line">            
            <footer>
                <p>
                    Bookish is a work in progress that requires improvements in several areas, such as implementing an API wrapper for enhanced search functionality and performance. 
                    It also needs a redesign and styling updates for pages like the profile page and book results. The project will continue to receive regular updates.
                </p>
            </footer>
        </div>


        
        <div class="general-card-layout">
            <header>
                <h2>Who is bookish for? üíÅ</h2>
            </header>
            <div class="answer custom-answer">
                <div>
                    <h3>End users</h3>
                    <p>
                        Bookish is designed for a diverse audience, including readers and book lovers who wish to catalog and share their reading experiences, 
                        book clubs looking for a centralized platform to discuss and review books, libraries and educators aiming to engage their communities in reading discussions, 
                        and social learners interested in connecting with others over shared reading preferences. It serves as a versatile tool to foster a love for reading and build 
                        connections among individuals with similar literary interests.
                    </p>
                    <h3>Other Developers</h3>
                    <p>
                        Developers would want to use Bookish as a foundation for building their own book-related applications or as a learning resource for understanding how to integrate APIs, manage user authentication, and create dynamic web applications using Django. 
                        It provides a practical example of combining backend and frontend technologies to deliver a seamless user experience. Additionally, the project demonstrates best practices in organizing code, utilizing Django's ORM, and implementing responsive design.
                    </p>
                </div>
                <img class="project-image" src="/assets/bookish/bookishh_screenshot5.png" alt="">
            </div>
            <hr class="custom-line">            
            <footer>
                <p>
                </p>
            </footer>
        </div>

        <div id="carouselExampleDark" class="carousel carousel-dark slide cstm-carousel" data-bs-ride="carousel">
            <div class="carousel-indicators">
              {% for i in range(0, 9) %}
                <button
                  type="button"
                  data-bs-target="#carouselExampleDark"
                  data-bs-slide-to="{{ i }}"
                  class="{% if i == 0 %}active{% endif %}"
                  aria-current="{% if i == 0 %}true{% endif %}"
                  aria-label="Slide {{ i + 1 }}">
                </button>
              {% endfor %}
            </div>
          
            <div class="carousel-inner">
              {% for i in range(1, 11) %}
               {% if i != 4 %}
                    <div class="carousel-item {% if i == 1 %}active{% endif %}" data-bs-interval="5000">
                        <img src="/assets/bookish/bookishh_screenshot{{ i }}.png" class="d-block w-100" alt="Slide {{ i }}">
                        <div class="carousel-caption d-none d-md-block">
                        <!-- <h5>Slide {{ i }} label</h5>
                        <p>Some representative placeholder content for slide {{ i }}.</p> -->
                        </div>
                    </div>
               {% endif %}
              {% endfor %}
            </div>
          
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="prev">
              <span class="carousel-control-prev-icon" aria-hidden="true"></span>
              <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="next">
              <span class="carousel-control-next-icon" aria-hidden="true"></span>
              <span class="visually-hidden">Next</span>
            </button>
          </div>

    </div>

    <div class="last-column"></div>
</main>
